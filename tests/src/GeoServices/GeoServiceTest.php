<?php

namespace GeoServices;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-09-10 at 20:58:27.
 */
class GeoServiceTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var GeoService
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new GeoService;
//        $this->object->lookup('185.10.22.56');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @expectedException \GeoServices\GeoException
     */
    public function testMaxmindDbWrongFile() {
        $this->object->setMaxmindDb('');
    }

    /**
     * @expectedException \GeoServices\GeoException
     */
    public function testMaxmindOldDbWrongFile() {
        $this->object->setMaxmindOldDb('');
    }

    /**
     * @expectedException \GeoServices\GeoException
     */
    public function testMaxmindIspDbWrongFile() {
        $this->object->setMaxmindISPDb('dfghdfgdfg.invalid');
    }

    /**
     * @expectedException \GeoServices\GeoException
     */
    public function testLookupInvalidIp() {
        $this->object->lookup('invalid');
    }

    /**
     * @expectedException Exception
     */
    public function testEmptyLookup() {
        $this->object->isCityRequired = false;
        $this->object->isCountryCodeRequired = false;
        $this->object->isCountryNameRequired = false;
        $this->object->lookup('185.10.22.56');
    }

    /**
     * @expectedException \GeoServices\GeoException
     */
    public function testNoMethodsLookup() {
        $this->object->maxmind = false;
        $this->object->maxmindold = false;
        $this->object->freegeoip = false;
        $this->object->geobytes = false;
        $this->object->ipgeobase = false;
        $this->object->ipinfo = false;
        $this->object->telize = false;
        $this->object->lookup('185.10.22.56');
    }

    public function testLookupUsual() {
        $this->object->maxmind = 1;
        $this->object->maxmindold = 2;
        $this->object->freegeoip = 3;
        $this->object->geobytes = 4;
        $this->object->ipgeobase = 5;
        $this->object->ipinfo = 5;
        $this->object->telize = 5;
        $this->object->setMaxmindOldDb('/var/www/GeoLiteCity.dat');
        $this->object->setMaxmindDb('/var/www/GeoLite2-City.mmdb');
        //valid ip
        try {
             $data = $this->object->lookup('130.211.158.236');
             $this->assertInstanceOf('\GeoServices\GeoObject', $data);
        } catch (\GeoServices\GeoException $ex) {
            
        }
    }

}
